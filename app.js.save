var express = require('express');
var bodyParser = require('body-parser');
var mongoose = require('mongoose');
var Item = require('./models/menu.js').Item;
var Deal= require('./models/deal.js').Deal;
var CoinList= require('./models/coin.js').CoinList;
var Language = require('./models/languages.js').Language;
var passport = require('passport');
var request = require("request");

mongoose.connect('mongodb://localhost/test', {
  keepAlive: true,
  reconnectTries: Number.MAX_VALUE,
  useMongoClient: true
});

var db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function() {
  console.log('Database connection activated...');
});

require('./config/passport');

var routesApi = require('./routes/index');
var app = express();

app.use(function(req, res, next) {
	res.header("Access-Control-Allow-Origin", "*");
	res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
	next();
});

app.use(bodyParser.json({type: 'application/json'}));
app.use('/', routesApi);

var port = 8
0; 

app.listen(port,function(err) {
	console.log('Running server on port '+ port);
});

// BACKEND PROCESS NEEEDED
var setCoinList  = function() {
	request('https://api.coinmarketcap.com/v1/ticker/?limit=0', function (error, response, body) {	
	var coinlist1= new CoinList({ _id:'1' ,coinList: body});
	CoinList.count({}, function(err, count){
		if(count==0){
			coinlist1.save(function(err,coinlist) {
			console.log('Coin List has been saved');
			});
		}
		else if(count==1 && body != null){
			CoinList.update({ _id: '1' }, { $set: { coinList: body }}).exec();
			console.log('Coin List has been updated');
		}
	});
});
};

var setLanguages= function (languages){	
	languages.map(function(n){
	var language = new Language({symbol: n});
	language.save(function(err,language) {
			console.log('language has been saved'+ language);
			});
	});
};

setCoinList();
//create languages english urdu and french for the app
setLanguages(['en','ur','fr']);
setInterval(setCoinList,240000);


